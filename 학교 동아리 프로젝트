from tkinter import *
from tkinter import messagebox

class Player():
     def _ init_(self,canvas, x, y):
          self.canvas = canvas
          self.id = canvas.create_oval(x * 30, y * 30, x * 30 + 30, y * 30 + 30, fill="red") 
               self.x, self.x, self.y = x, y
          self.nx, self.ny = x, y

     def move(self, direction):     #플레이어 움직이기
        if direction == 'w' :
            self.nx, self.x, self.y - 1

        elif direction == 'a' :
            self.nx, self.x - 1, self.y

        elif direction == 's' :
            self.nx, self.x, self.y + 1

        elif direction == 'd' :
            self.nx, self.x + 1, self.y
      
        if not self.is collide):
            self.canvas.move(self.id, (self.nx - self.x) * 30, (self.ny - self.y) * 30)
            self.x, self.y = self.nx, self.ny
         
        if map[self.y][self.x] == 3:
                  messagebox/showinfo(title="성공", message = "미로 찾기에 성공하셨습니다")


    def is_collide(self):
         if map[self.ny][self.nx] == 1:
               return True
         else:
               return False

def ketEvent(event):
    player.move(repr(event.char).strip("'"))

        

    
root = Tk()
root.title("미로 찾기 게임") #창의 제목
root.resizable(False, False)#창의 크기

width, height = 540, 540
x, y = (root,winfo_screenwidth() - width) / 2, (root.width_screenheigt() - height) / 2 #창 중앙 찾기
root.geometry("%dx%d+%d+%d" % (width, height, x, y)) #창 중앙 배치

canvas = Canvas(root, width=width, height=height, bg="white")
canvas.bind("<Key>", keyEvent)
canvas.focus_set()
canvas.pack()

(랜덤 코딩으로 맵 3개중 하나 나오게 하기)
map[
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 2, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1],
[1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1],
[1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1],
[1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1],
[1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1],
[1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1],
[1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1],
[1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1],
[1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1],
[1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1],
[1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
[1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1],
[1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1],
[1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1],
[1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 3, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]


for y in range(len(map[0])):
   for x in range(len(map[y])):
      if map[x] == 1:
         canvas.create_rectangle(x * 30, y * 30, x * 30 + 30, y * 30 + 30, fill="black")
      elif map[x] == 2:
         player = Player(canvas , x, y)
      elif map[x] == 3:
         canvas.create_oval(x * 30, y * 30, x * 30 + 30, y * 30 + 30, fill="blue")

root.mainloop()
